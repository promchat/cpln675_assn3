st_as_sf() %>%
st_transform(st_crs(calary)) %>%
st_union() %>% st_sf()
inundation_sf <- rasterToPolygons(cal_inun, fun=function(x){x==1}) %>%
st_as_sf() %>%
st_transform(st_crs(calgary)) %>%
st_union() %>% st_sf()
inundation_sf <- rasterToPolygons(cal_inun, fun=function(x){x==1}) %>%
st_as_sf() %>%
st_transform(st_crs(calgary)) %>%
st_union() %>% st_sf()
View(inundation_sf)
inundation_sf <- rasterToPolygons(cal_inun, fun=function(x){x==1})
cal_grid <- st_make_grid(calgary, cellsize = 1000) # 1 KM
cal_grid <- cal_grid[calgary] %>%            # clips the grid to the boundary file
st_sf() %>%
mutate(uniqueID = as.character(rownames(.)))
cal_grid_centroid <- st_centroid(cal_grid)
cal_grid$inun <- st_intersects(cal_grid, inundation_sf, sparse = F)
cal_slope <- raster(paste(folder,"/midTermProject_Data/SlopeFill_Calgary.tif",sep=''))
library(sprawl)
install.packages('sprawl')
knitr::opts_chunk$set(echo = TRUE,
warning=FALSE,
message=FALSE,
results='hide')
library(tidyverse)
library(sf)
library(raster)
library(sprawl)
library(sprawl)
devtools::install_github("lbusett/sprawl")
knitr::opts_chunk$set(echo = TRUE,
warning=FALSE,
message=FALSE,
results='hide')
library(tidyverse)
library(sf)
library(raster)
library(terra)
library(here)
#set wd
setwd("C:/Users/cchue/Documents/Penn MUSA/Spring/Land Use/cpln675_assn3")
folder <- here()
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
# Import pvout tif file
inun_grid <- cal_inun %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
res(cal_inun)
cal_inun_100 <- aggregate(cal_inun, fact = 10)
# Import pvout tif file
inun_grid <- cal_inun_100 %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
View(cal_inun_100)
View(cal_grid)
View(inun_grid)
inun_g1 <- inun_grid %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(COUNT, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
st_crs(cal_grid)
# Import pvout tif file
inun_grid <- cal_inun_100 %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary))
inun_g1 <- inun_grid %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(COUNT, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
View(inun_g1)
ig1 <- left_join(inun_g1, cal_grid)
View(ig1)
ggplot(ig1)+
geom_sf(aes(fill = inun), color = '')
ig1 <- left_join(inun_g1, cal_grid) %>% st_sf()
ggplot(ig1)+
geom_sf(aes(fill = inun), color = '')
ggplot(ig1)+
geom_sf(aes(fill = inun), color = NA)
res(cal_slope)
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(COUNT, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid)
View(slope_grid)
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(SlopeFill_Calgary, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
final_grid <- left_join(final_grid, slope_grid) %>% st_sf()
final_grid <- left_join(inun_grid, cal_grid) %>% st_sf()
final_grid <- left_join(inun_grid %>% st_drop_geometry(), cal_grid) %>% st_sf()
inun_grid <- cal_inun_100 %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(COUNT, na.rm = TRUE))
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(slope = mean(SlopeFill_Calgary, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
final_grid <- left_join(inun_grid %>% st_drop_geometry(), cal_grid) %>% st_sf()
ggplot(final_grid)+
geom_sf(aes(fill = inun), color = NA)
final_grid <- left_join(final_grid, slope_grid) %>% st_sf()
ggplot(final_grid)+
geom_sf(aes(fill = slope), color = NA)
ggplot(cal_grid_out)+
geom_sf(aes(fill = slope), color = NA)
cal_grid_out <- left_join(inun_grid %>% st_drop_geometry(), cal_grid) %>% st_sf()
ggplot(cal_grid_out)+
geom_sf(aes(fill = inun), color = NA)
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(slope = mean(SlopeFill_Calgary, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
cal_grid_out <- left_join(cal_grid_out, slope_grid) %>% st_sf()
ggplot(cal_grid_out)+
geom_sf(aes(fill = slope), color = NA)
knitr::opts_chunk$set(echo = TRUE,
warning=FALSE,
message=FALSE,
results='hide')
library(tidyverse)
library(sf)
library(raster)
library(terra)
library(here)
#set wd
setwd("C:/Users/cchue/Documents/Penn MUSA/Spring/Land Use/cpln675_assn3")
folder <- here()
calgary <- read_sf(paste(folder,"/midTermProject_Data/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp", sep =''))
# inundatation (target Var)
cal_inun <- raster(paste(folder,"/midTermProject_Data/inundation/prj.adf",sep=''))
# Land use
# slope
cal_slope <- raster(paste(folder,"/midTermProject_Data/SlopeFill_Calgary.tif",sep=''))
res(cal_slope)
# river
cal_grid <- st_make_grid(calgary, cellsize = 1000) # 1 KM
cal_grid <- cal_grid[calgary] %>%            # clips the grid to the boundary file
st_sf() %>%
mutate(uniqueID = as.character(rownames(.)))
cal_inun_100 <- aggregate(cal_inun, fact = 10)
inun_grid <- cal_inun_100 %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(inun = mean(COUNT, na.rm = TRUE))
cal_grid_out <- left_join(inun_grid %>% st_drop_geometry(), cal_grid) %>% st_sf()
ggplot(cal_grid_out)+
geom_sf(aes(fill = inun), color = NA)
slope_grid <- cal_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = cal_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(calgary)) %>%
# Join in fishnet cell ids to all points located within them
st_join(cal_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(slope = mean(SlopeFill_Calgary, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
cal_grid_out <- left_join(cal_grid_out, slope_grid) %>% st_sf()
ggplot(cal_grid_out)+
geom_sf(aes(fill = slope), color = NA)
hydrology <- st_read("https://data.calgary.ca/api/geospatial/5fk8-xqeu?method=export&format=GeoJSON")
cal_grid_centroid <- cal_grid %>%
st_centroid()
water_dist <- cal_grid_centroi %>%
st_distance(hydrology %>%
st_transform(st_crs(cal_grid_centroi))) %>%
as.data.frame() %>%
mutate(uniqueID = as.character(row_number())) %>%
gather(-uniqueID, key = "variable", value = "value") %>%
dplyr::select(-variable) %>%
group_by(uniqueID) %>%
summarize(water_dist = min(value))
water_dist <- cal_grid_centroid %>%
st_distance(hydrology %>%
st_transform(st_crs(cal_grid_centroi))) %>%
as.data.frame() %>%
mutate(uniqueID = as.character(row_number())) %>%
gather(-uniqueID, key = "variable", value = "value") %>%
dplyr::select(-variable) %>%
group_by(uniqueID) %>%
summarize(water_dist = min(value))
water_dist <- cal_grid_centroid %>%
st_distance(hydrology %>%
st_transform(st_crs(cal_grid_centroid))) %>%
as.data.frame() %>%
mutate(uniqueID = as.character(row_number())) %>%
gather(-uniqueID, key = "variable", value = "value") %>%
dplyr::select(-variable) %>%
group_by(uniqueID) %>%
summarize(water_dist = min(value))
View(water_dist)
cal_grid_out <- left_join(cal_grid_out, water_dist) %>% st_sf()
View(cal_grid_out)
dem_slope <- raster(paste(folder,"/DesMoines/SlopeFill_DesMoines.tif",sep=''))
res(cal_slope)
desmoines<- read_sf(paste(folder,"/DesMoines/Jurisdiction/City.shp", sep =''))
ggplotI(desmoines)+
geom_sf()
ggplot(desmoines)+
geom_sf()
View(desmoines)
desmoines<- read_sf(paste(folder,"/DesMoines/Jurisdiction/City.shp", sep ='')) %>%  filter( MUNI == "DESM")
ggplot(desmoines)+
geom_sf()
ggplot(cal_grid_out)+
geom_sf(aes(fill = water_dist), color = NA)
ggplot(cal_grid_out)+
geom_sf(aes(fill = water_dist %>% as.numeric()), color = NA)
des_hydrology <- read_sf(paste(folder,"/DesMoines/Hydrology/HydroMajorStream.shp", sep =''))
des_slope <- raster(paste(folder,"/DesMoines/SlopeFill_DesMoines.tif",sep=''))
st_crs(desmoines)
st_crs(calgary)
des_grid <- st_make_grid(desmoines, cellsize = 1000) # 1 KM
des_grid <- des_grid[desmoines] %>%            # clips the grid to the boundary file
st_sf() %>%
mutate(uniqueID = as.character(rownames(.)))
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(slope = mean(SlopeFill_DesMoines, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid) %>%
# convert to data.frame,
as.data.frame() %>%
# then for each unique fishnet grid cell
group_by(uniqueID) %>%
# get the mean of the photovoltaic output values
summarize(slope = mean(SlopeFill_DesMoines, na.rm = TRUE)) %>%
# and then combine the dataset back together
ungroup()
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid)
ggplot()+
geom_sf(data = desmoines)
ggplot()+
geom_sf(data = des_grid)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
ggplot()+
geom_sf(data = des_grid)+
geom_sf(data = slope_grid)
st_crs(des_slope)
des_slope <- raster(paste(folder,"/DesMoines/SlopeFill_DesMoines.tif",sep='')) %>% st_transform(crs = st_crs(desmoines))
crs(des_slope) <- st_crs(desmoines)
des_slope <- raster(paste(folder,"/DesMoines/SlopeFill_DesMoines.tif",sep=''))
crs(des_slope) <- st_crs(desmoines)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf()
ggplot()+
geom_sf(data = des_grid)+
geom_sf(data = slope_grid)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_transform(crs = st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_set_crs(st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid)
ggplot()+
geom_sf(data = des_grid)+
geom_sf(data = slope_grid)
crs(des_slope)
crs(desmoines)
crs(des_slope) <- crs(desmoines)
crs(desmoines)
crs(des_slope)
des_grid <- st_make_grid(desmoines, cellsize = 1000) # 1 KM
des_grid <- des_grid[desmoines] %>%            # clips the grid to the boundary file
st_sf() %>%
mutate(uniqueID = as.character(rownames(.)))
ggplot()+
geom_sf(data = des_grid)+
geom_sf(data = slope_grid)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
st_set_crs(st_crs(desmoines)) %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid)
slope_grid <- des_slope %>%
# Crop it to fit the dimensions of the fishnet
#crop(y = des_grid) %>%
# Convert to spatial polygons data.frame
as('SpatialPolygonsDataFrame') %>%
# Convert to Sf format
st_as_sf() %>%
# Join in fishnet cell ids to all points located within them
st_join(des_grid)
ggplot()+
geom_sf(data = des_grid)+
geom_sf(data = slope_grid)
Calgary_Z = read.csv("Calgary_Land_Use_Districts.csv")
Calgary_Z = read.csv(paste(folder,"/midTermProject_Data/Calgary_Land_Use_Districts.csv", sep=''))
unique(Calgary_Z$LU_CODE)
Calgary_Z = Calgary_Z %>% mutate(CodeFirstLetter = substr(LU_CODE, 0, 1))
Calgary_Z = Calgary_Z %>% mutate(ZoningType = case_when(
CodeFirstLetter == "D" ~ "SALDO",
CodeFirstLetter == "S" ~ "SALDO",
CodeFirstLetter == "A" ~ "SALDO",
CodeFirstLetter == "D" ~ "Residential",
CodeFirstLetter == "R" ~ "Residential",
CodeFirstLetter == "H" ~ "SALDO",
CodeFirstLetter == "M" ~ "Mixed-Use",
CodeFirstLetter == "I" ~ "Industrial",
CodeFirstLetter == "F" ~ "Farm",
CodeFirstLetter == "C" ~ "Commercial"))
unique(Calgary_Z$ZoningType) # "SALDO"       "Residential" "Mixed-Use"   "Commercial"  "Industrial"
View(Calgary_Z)
cal_zoning <- Calgary_Z %>% st_sf()
cal_zoning <- Calgary_Z %>% st_as_sf()
cal_zoning <- Calgary_Z %>% st_sf(geometry = "MULTIPOLYGON")
cal_zoning <- Calgary_Z %>% st_sf(coords = "MULTIPOLYGON")
cal_zoning <- Calgary_Z %>% st_sf(geometry = MULTIPOLYGON)
